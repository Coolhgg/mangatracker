generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Source {
  MANGADEX
}

model User {
  id        String   @id @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  readingProgress ReadingProgress[]
  trackedSeries   UserSeries[]
}

model Series {
  id           String   @id @default(uuid()) @db.Uuid
  source       Source
  sourceId     String
  title        String
  description  String?
  coverUrl     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  lastSyncedAt DateTime?

  // Relations
  chapters Chapter[]
  progress ReadingProgress[]
  trackedBy UserSeries[]

  @@unique([source, sourceId], name: "series_source_sourceId_unique")
}

model Chapter {
  id         String   @id @db.Uuid
  seriesId   String   @db.Uuid
  sourceId   String
  number     String
  title      String?
  publishedAt DateTime?

  // Relations
  series Series @relation(fields: [seriesId], references: [id], onDelete: Cascade)
  progress ReadingProgress[]

  @@unique([seriesId, sourceId], name: "chapter_seriesId_sourceId_unique")
}

model UserSeries {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  seriesId  String   @db.Uuid
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  series Series @relation(fields: [seriesId], references: [id], onDelete: Cascade)

  @@unique([userId, seriesId], name: "user_series_unique")
}

model ReadingProgress {
  id        String   @id @db.Uuid
  userId    String   @db.Uuid
  seriesId  String   @db.Uuid
  chapterId String   @db.Uuid
  readAt    DateTime @default(now())

  // Relations
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  series  Series  @relation(fields: [seriesId], references: [id], onDelete: Cascade)
  chapter Chapter @relation(fields: [chapterId], references: [id], onDelete: Cascade)

  @@unique([userId, chapterId], name: "reading_user_chapter_unique")
}
